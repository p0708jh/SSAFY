Event의 default(대전제)는 bubbling 이다
Event는 capturing으로 시작해서 bubbling으로 진행된다.
위임이란 자식에게 발생한 Event를 부모에게 할당한다
target은 실제 event가 작동 되어야 할 곳
currentTarget은 현재 event가 머물러 있는 곳

Event
- bubbling
- capturing (방향전환 defualt:false)
- delegation(위임) // 버블링과 캡처링을 이용하여 부모에만 이벤트를 단다


addEventListener("click",event=>{},capture:false값(true,false default는 false));


slice(시험나옴)/splice(시험안나옴)



// slice 1번인덱스부터 2번인덱스 전까지

const names = ["jony","sylvie","nana","nana","nana","nana","nana","nana","nana"];

const newNames=names.slice(1,2);
console.log(names);
console.log(newNames);

// splice 3번인덱스에서 2개의 배열(길이)만큼 삭제
const names = ["jony","sylvie","nana","nana","nana","nana","nana","nana","nana"];

const newNames=names.splice(3,2);
console.log(names);
console.log(newNames);


// 과목평가 총정리

js의 실행기는 웹 브라우저와 node.js

node.js 브라우저 바깥을 벗어난 js 대표적으로 서버

실행기=> runtime

ECMA Script : 규칙을 정해놓음????

=== VS ==

var, let, const의 변수 호이스팅: 세개 다 발생
대신에, let,const는 접근이 불가능(시험)

함수 표현식: 함수 호이스팅이 아닌 변수 호이스팅이 발생한다(시험)
const sampleFunc=function(){}
const sampleFunc= ()=>{} //화살표 함수는 함수 표현식이고 모든 화살표 함수는 무명함수

const arr = [1,2,3];
// 에러가 아님
arr[2]=1;

// 에러 이건 안됨
arr=[2,4,6];

dom 접근할때

document.querySelector(".title")

getElementById() //(시험)
getElementsByClassName()//(시험)

const btn=document.querySelector("button")
btn.addEventListener("click",(()=>console.log("hi")))

--------------------------------------------------------
인라인 이벤트 방식(시험 쌔게나옴)

<button onclick="sayHi()">
const sayHi=()=> console.log("hi")

classList(시험)
4가지 잘기억하기

키업 또는 키다운 사용하는거(시험)

콜백함수: 함수안에 들어가는 함수

이벤트 발생 시킬때 좋음

slice splice 연습해보기

arry loop 장점: 원본 데이터를 유지하겠다는 의지
forEach,map,filter,reduce

indexOf,concat,push,split...

버블링
캡처
위임

HTTP Request Method

GET : 정보 가져오기 
POST : 게시물,회원가입 할때 create
PUT : 전부 수정
PATCH : 일부 수정
DELETE : 삭제

min.js : cdn 등 에서 줄인거

서버와 클라이언트 데이터 통신 표준: JSON
















